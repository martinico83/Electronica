CCS PCM C Compiler, Version 5.110P, 62724               28-jun.-23 13:58

               Filename:   C:\Users\El_fi\OneDrive\Escritorio\Electronica\PIC\16F88\CCS-PIC16F88\miPrimerProyecto.lst

               ROM used:   63 words (2%)
                           Largest free fragment is 2048
               RAM used:   6 (2%) at main() level
                           7 (2%) worst case
               Stack used: 0 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   019
0003:  NOP
.................... //Directivas
.................... 
.................... #include <16f88.h>
.................... //////////// Standard Header file for the PIC16F88 device ////////////////
.................... ///////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996, 2020 Custom Computer Services          ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
.................... #device PIC16F88
.................... 
.................... #list
.................... 
.................... #fuses XT, NOPROTECT, NOWDT, NOBROWNOUT, PUT, NOLVP
.................... #use DELAY(internal=4000000)
0004:  MOVLW  22
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   018
000A:  MOVLW  01
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  4A
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  GOTO   016
0016:  DECFSZ 00,F
0017:  GOTO   00A
0018:  RETURN
.................... 
.................... #byte TRISB = 0x86
.................... #byte PORTB = 0x06
.................... //Variables globales
.................... 
.................... 
.................... //Interrupciones
.................... 
.................... 
.................... 
.................... //Programa principal
.................... void main (){
0019:  MOVF   03,W
001A:  ANDLW  1F
001B:  MOVWF  03
001C:  MOVLW  62
001D:  BSF    03.5
001E:  MOVWF  0F
001F:  CLRF   10
0020:  MOVF   0F,W
0021:  BCF    1F.4
0022:  BCF    1F.5
0023:  MOVF   1B,W
0024:  ANDLW  80
0025:  MOVWF  1B
0026:  MOVLW  07
0027:  MOVWF  1C
0028:  BCF    03.7
....................    //Configuración de periféricos
....................    TRISB = 0x00;
0029:  CLRF   06
....................    PORTB = 0x00;
002A:  BCF    03.5
002B:  CLRF   06
....................    
....................    
....................    //Bucle infinito
....................    while(TRUE){
....................    PORTB = 0b11111111;
002C:  MOVLW  FF
002D:  MOVWF  06
....................    delay_ms(1000);
002E:  MOVLW  04
002F:  MOVWF  21
0030:  MOVLW  FA
0031:  MOVWF  22
0032:  CALL   004
0033:  DECFSZ 21,F
0034:  GOTO   030
....................    PORTB = 0b00000000;
0035:  CLRF   06
....................    delay_ms(1000);   
0036:  MOVLW  04
0037:  MOVWF  21
0038:  MOVLW  FA
0039:  MOVWF  22
003A:  CALL   004
003B:  DECFSZ 21,F
003C:  GOTO   038
003D:  GOTO   02C
....................    }
.................... }
003E:  SLEEP

Configuration Fuses:
   Word  1: 3F30   NOWDT PUT INTRC_IO MCLR NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG CCPB0 NOPROTECT
   Word  2: 3FFF   FCMEN IESO
